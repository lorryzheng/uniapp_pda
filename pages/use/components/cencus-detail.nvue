<template>
	<view style="width:750px;position:absolute;left:0;top:0;background-color: white;" :style="{height:mainContentHeight+'wx'}">
		<view class="head border-bottom">
			<text style="font-size:35px;">接收明细</text>
      	<image src="../../static/img/i-close1.png" class="close-img" @click="closeDetail" alt=""></image>

		</view>
		<scroller class="scroller" style="flex:1;">
		<!-- 	<view v-if="detailList.length" v-for="(item,index) in detailList" :key="index">
				<view class="detail-item">
					<text class="detail-index">{{index+1}}</text>
					<text class="detail-name">{{item.clmc}}</text> 
					<text class="detail-num">{{item.clsl}}</text>
				</view>
			</view> -->
			<detailItem v-if="detailList.length" v-for="(item,index) in detailList" :key="index" :item="item"></detailItem>
		</scroller>
       <wxc-loading :show="loading"></wxc-loading>		
	</view>
</template>

<script>
	import {
		getusecencusdetail
	} from "../../../common/api.js";
	import {WxcLoading} from 'weex-ui';
		import {
		myMixin
	} from "../../../common/mixins.js";
	const storage = weex.requireModule('storage');
	import detailItem from './detail-item.nvue';

	export default {
		mixins: [myMixin],
		components: {detailItem,WxcLoading},
		props: ['item'],
	
	
		data() {
			return {
				detailList: [],
				detailHeight: '100',
				mainContentHeight:'2000',
				imgHeight:300,
				loginForm:{}
			}
		},
		created(){
			storage.getItem('loginForm', event => {
			  this.loginForm = JSON.parse(event.data);
			  this.getcencusdetail();
			})
			// this.getmaterial();
			this.getmaincontentheight();
		},
		methods: {
			getcencusdetail(){
				this.loading=true;
				const data={"Tmxx":{"bnrList":[],"end_dt_sy":this.item.endTime.trim(),"isChecked":false,"start_dt_sy":this.item.startTime.trim(),"sy_did":this.loginForm.deptId},"PageReq":{},"LoginForm":this.loginForm};
				console.log('getcencusdetail');
				console.log(JSON.stringify(data));
				getusecencusdetail(data).then(res=>{
					this.loading=false;
					console.log('getcencusdetail');
					console.log(JSON.stringify(res))
					if(res.status=="OK"){
						this.detailList=res.returnValue.rows.map(item=>{
							return {bmc:item.bmc,tmid:item.tmid,sy_dt:item.sy_dt,p_name:item.p_name}
						})
					}
				})
			},
			onLoadimg(e){
			    this.imgHeight=Math.floor(750*e.size.naturalHeight/e.size.naturalWidth);
			},
			async getmaincontentheight(){
				this.mainContentHeight=await this.getmainContentHeight();
			},
			closeDetail(){
				this.$emit('closeDetail',null);
			},

		},
		mounted(){
					
		}
	}
</script>
<style src="../../../common/base.css"></style>
<style scoped>
	.head {
		padding: 20px 30px 20px 30px;;
		position: relative;
		flex: none;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.close-img {
		width: 40px;
		height: 40px;
	}
	.mainimg {
		width: 750px;
		position: relative;
	}
	.tip {
		position: absolute;
		left: 0;
		top: 30px;
		background-color: rgba(0, 0, 0, 0.5);
		color: white;
		font-size: 33px;
	    padding:10px;
		border-radius:5px;
	}
	.detail-content {
		flex: 1;
	}
	.detail-item {
		display: flex;
		flex-direction: row;
		align-items: center;
		padding: 20px 30px 20px 30px;
	}
	.detail-index {
		font-size: 35px;
		color: #A5A5A5;
	}
	.detail-name {
		padding-left:30px;
		flex: 1;
		font-size: 38px;
		color: #333333;
	}
	.detail-num {
		font-size: 40px;
		color: #0080FF;
	}

</style>
