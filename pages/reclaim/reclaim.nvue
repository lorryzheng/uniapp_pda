<template>
	<view class="maincontent">
		<view class="statusBar" style="flex:none;background-color: black;" :style="{height:statusBarHeight+'wx'}"></view>
		<view class="home-content" style="position:relative;">
			<!-- 单独header组件 --> 
			 
		    <navhearder @stepClick="stepClick" :buttonList="buttonList"  :loginForm="loginForm"></navhearder>
			
			
			<view style="flex:1;width:750px;" v-if="activeIndex==0" @click="closeSelect">
				<view class="flexaround input-row border-bottom">
					<view class="flexaround paddingimage" @click="showSelect('buildSelect')" style="flex:1;align-items: center;">
						<text  style="flex:none;font-size:35px;">大楼:</text>
						<text style="flex:1;height:60px;line-height:60px;font-size:35px;">{{build.dlname}}</text>
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
					</view>
					<view class="flexaround paddingimage" @click="showSelect('floorSelect')" style="flex:1;align-items: center;">
						<text style="flex:none;font-size:35px;">楼层:</text>
						<text style="flex:1;height:60px;line-height:60px;font-size:35px;">{{floorName}}</text>
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
					</view>
				</view>
				<view class="flexaround input-row border-bottom">
					<view class="flexaround paddingimage" @click="showSelect('deptSelect')" style="flex:2;align-items: center;">
						<text  style="flex:none;font-size:35px;">科室:</text>
						<input style="height:60px;flex:1;" type="text" @focus="showSelect('deptSelect')" v-model="dept" placeholder="科室" @input="onsearchdept($event)"></input>
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
					</view>
					<view class="flexaround" style="flex:1;align-items: center;">
							<wxc-button text="备注" type="blue" :btn-style="{width:'120px',height:'80px;'}" :text-style="{fontSize:'30px',color:'white'}" @wxcButtonClicked="wxcButtonClicked"></wxc-button>
					</view>
				</view>
				<view class="flexaround input-row border-bottom">
					<view class="flexaround paddingimage" @click="showSelect('stateSelect')" style="flex:2;align-items: center;">
						<text style="flex:1;height:60px;line-height:60px;font-size:35px;">{{state.hstype_name}}</text>
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
					</view>
					<view class="flexaround" style="flex:1;align-items: center;">
						
						<text style="flex:none;	text-align: right;font-size: 29upx;color: #0080FF;" @click="navigateTodayReclaim">今日回收({{todayReclaimNum}})</text>
					</view>
				</view>
				
				<view class="main-list">
					<scroller class="scroller" @loadmore="scrolltoBottom" :loadmoreoffset="20">
						<reclaimItem v-for="(item,index) in toReclaimList" :item="item" @showitemdetail="showitemdetail" @onChoseItem="onChoseItem"></reclaimItem>					
						<loadingmore v-if="toReclaimList.length" :loadingType="loadingType"></loadingmore>
					</scroller>
					
				</view>
					
				<view class="input-row border-bottom" style="flex-direction: row;align-items: center;border-color: #E5E5E5;border-top-width:2px;">
					
					<view class="checkimage-view" :class="[!choseall?'activeborder':'']" @click="choseAll()" > 
						<image src="../../static/img/i-ok.png" v-if="choseall" class="check-image"></image>
					</view>
					<text style="font-size:30px;margin-left:30px;">全选({{toReclaimList.length}})</text>
					<input style="height:60px;flex:1;margin-left:30px;" type="text" v-model="bid" return-key-type="search" @focus="closeSelect" placeholder="请录入包条码" @return="onEnter()"></input>
				</view>
				<view class="bottom-button">
					<view style="flex:3;">
						<view style="padding-left:20px;" v-if="sdownPerson">
							<text style="font-size:35px;">{{downPersonDetail.us_username}}</text>
							<view style="flex-direction: row;">
								<text class="personfont">{{downPersonDetail.us_deptid}}</text> 
								<text class="personfont" style="margin-left:30px;">{{downPersonDetail.us_deptname}}</text>
							</view>
						</view>
				
						<view style="padding-left: 40px;flex-direction: row;justify-content: center;flex:1;align-items: center;" v-if="!sdownPerson">
							<image src="../../static/img/i-scanning1.png" style="width: 40px;height: 33px;margin-right:10px;"></image>
							<input type="text" v-model="downPerson" style="flex:1;height: 60px;" confirm-type="确定" @focus="closeSelect" @confirm="onpersonEnter()" placeholder="请扫描下收人信息" />
						</view>
					</view>		
					<text class="same-button" style="flex:2;" @click="sureReclaimbylist">确认回收({{accontNum}})</text>
				</view>
				<scrollerComponent :showpleaseSlect="true" :listshow="buildSelect" @chose="onChoosebuild"  :width="'380'" :height="'300'" :left="'20'" :top="'80'" :dataList="builds" :lable="'dlname'"></scrollerComponent>
				<scrollerComponent :showpleaseSlect="true" :listshow="floorSelect" @chose="onChoosefloor"  :width="'380'" :height="'300'" :left="'360'" :top="'80'" :dataList="floors" :lable="'lcname'"></scrollerComponent>
				<scrollerComponent :showpleaseSlect="true" :listshow="deptSelect" @chose="onChoosedept"  :width="'420'" :height="'350'" :left="'20'" :top="'170'" :dataList="kslist" :lable="'de_deptname'"></scrollerComponent>
				<scrollerComponent :listshow="stateSelect" @chose="onChooseState"  :width="'420'" :height="'300'" :left="'20'" :top="'260'" :dataList="stateList" :lable="'hstype_name'"></scrollerComponent>
				
				
				<wxc-loading :show="loading"></wxc-loading>		
				<wxc-mask height="400"
				          width="600"
				          border-radius="20"
				          mask-bg-color="#FFFFFF"
				          :has-overlay="true"
				          :show-close="false"
				          :show="show"
						  @wxcMaskSetHidden="wxcMaskSetHidden"
				         >
						  <div class="content" @click="stop">
								<div class="flexbetween" style="margin-bottom:20px;">
									<text style="font-size:30px;">备注</text>
									<image src="../../static/img/i-close2.png" style="width:50px;height:50px;" @click="cleanremark"></image>
								</div>
								<input class="uni-input" type="text" v-model="remark" placeholder="备注" style="border-radius:5px;width:500px;height:100px;border-style:solid;border-color: #E5E5E5;border-width:2px;"  />
								<view style="margin-top:50px;width:600px;flex-direction: row;height:80px;justify-content: center;">
										<wxc-button text="取消" type="white" :btn-style="{width:'120px',height:'50px;'}" :text-style="{fontSize:'30px',color:'gray'}" @wxcButtonClicked="cleanremark"></wxc-button>
										<view style="width:100px;"></view>
										<wxc-button text="确认" type="blue" :btn-style="{width:'120px',height:'50px;'}" :text-style="{fontSize:'30px',color:'white'}" @wxcButtonClicked="show=false"></wxc-button>
								</view>
						  </div>
				</wxc-mask>
				<wxc-dialog :title="'包条码：'+bid"
				            :content="messagecontent"
				            :show="showsurereclaim"
							 @wxcDialogCancelBtnClicked="dialogCancelBtnClick"
				            @wxcDialogConfirmBtnClicked="dialogConfirmBtnClick"
				          ></wxc-dialog>
			</view>
            <!-- 统计页面 -->
			<cencusComponent v-if="activeIndex==1" :todayReclaimNum="todayReclaimNum"></cencusComponent>
			<reclaimDetail v-if="showdetailitem" @closeDetail="showdetailitem=false" :item="activeitem"></reclaimDetail>
			
		</view>
		
	</view>
</template>


<script>
	
	
	var modal = weex.requireModule('modal');
	const storage = weex.requireModule('storage')
	import { WxcMask,WxcButton,WxcLoading,WxcIcon,WxcDialog} from 'weex-ui';
	import Navhearder from '../_mods/navhearder.nvue';
	import loadingmore from '../_mods/loading-more.nvue';
	import scrollerComponent from '../_mods/scroller.nvue';
	import cencusComponent from './components/cencus.nvue';
	import reclaimItem from "./components/reclaim-list-item.nvue";
	
	import reclaimDetail from "./components/reclaim-detail.nvue";
	import {
		myMixin
	} from "../../common/mixins.js";
	import * as _ from '../../common/lodash.min.js';
	import {
		 	getbuilds,
		 	getfloors,
		 	getdeptbyfloor,
		 	getToreclaim,
		 	getTodayReclaimNum,
		 	reclaimByList,
		 	getdownPerson,
		 	doreclaim,
		 	cancleRecliam,
		 	doreclaimSpecial
	} from "../../common/api.js";
	  

		
	export default {
		mixins: [myMixin],
		components: { WxcMask,Navhearder,WxcButton,scrollerComponent ,WxcLoading,loadingmore,WxcIcon,WxcDialog,reclaimItem,reclaimDetail,cencusComponent},
		data() {
			return {
				loading:false,
				page:1,
				pageSize:20,
				toReclaimList:[],
				timer:'',
				state:{stateMethod:"getTmxxListForHs",	hstype_name: '全部'},
				// stateMethod:"getTmxxListForHs",
				dept:'',
				loginForm:{},
				accontNum:0,
				loadingType:0,
				disabled:false,
				build:{},
				// floor:{},
				floorName:'',
				floorlcbh:'',
				todayReclaimNum:0,
				floorSelect:false,
				 deptSelect:false,
				  buildSelect:false,
				   stateSelect:false,
				   builds:[],
				   floors:[],
				   		stateList: [{
				   	hstype_name: '全部',
				   	stateMethod: 'getTmxxListForHs'
				   }, {
				   	hstype_name: '已使用',
				   	stateMethod: 'getTmxxListForSyHs'
				   }, {
				   	hstype_name: '已过期',
				   	stateMethod: 'getTmxxListForGqHs'
				   }, {
				   	hstype_name: '不合格',
				   	stateMethod: 'getTmxxListForBhgHs'
				   }],
				   deptlist:[],
				   buttonList:['回收','统计'], 
				   activeIndex:0,
				   kslist:[],
				   deptId:'',
				   choseall:false,
				   show:false,
				   remark:'',
				   bid:'',
				   sdownPerson:false,
				   downPersonDetail:{},
				   messagecontent:'',
				   dialogstate:'',
				   reclaimType: "normal",
				   downPerson:'',
				    showdetailitem:false,
				    activeitem:{},
					showsurereclaim:false
				   
			

		
			}
		},
	
		created() {
			this.setbarheight();
			// this.linsentBarCode();
			this.linsentBarCode(this.judgeScanType)
			storage.getItem('loginForm', event => {
			  this.loginForm = JSON.parse(event.data);
			  this.getToreclaim();
			  this.getbuilds();
			})
			storage.getItem('deptlist', event => {
			  this.deptlist=JSON.parse(event.data);
			  this.searchList('');
			})
		},
			
		methods: {
			dialogCancelBtnClick(){
				this.showsurereclaim=false;
			},
			navigateTodayReclaim(){
				uni.navigateTo({
					url: `/pages/todayreclaim/todayreclaim`
				});
			},
			showitemdetail(item){
				this.showdetailitem=true;
				this.activeitem=item;
			},
			onpersonEnter() {
				if (!this.downPerson) {
					modal.toast({message: '请输入下收人编号'});
					return;
				}
				this.getdownPerson();
			},
			getdownPerson() {
				const data = {
					"Userinfo": {
						"us_userid": this.downPerson
					},
					"LoginForm": this.loginForm
				}
				getdownPerson(data).then(res => {
					if (res.errorCode == "0") {
						this.onColseDownPerson(res.returnValue.Userinfo)
					}
					if (res.status == "error") {						
						modal.toast({message: res.message});
					}
					
				})
			},
			onColseDownPerson(person) {
				if (person) {
					this.sdownPerson = true;
					this.downPersonDetail = person;
				}
			},
				/*回收enter事件功能区域*/
			judgeScanType(data) {
				let specialreg = new RegExp('^(BB|bb)');
				if (specialreg.test(data)) { //包扫码
					this.bid = data.trim();
					this.onEnter();
					return;
				}
				let reg = new RegExp('^(TM|tm)');
				if (reg.test(data)) { //包扫码
					this.bid = data.substring(2, data.length).trim();
					this.onEnter();
					return;
				}
				let personReg = new RegExp('^(ZG|zg)');
				if (personReg.test(data)) { //人员扫码
					this.downPerson = data.substring(2, data.length).trim();
					this.onpersonEnter();
					return;
				}
				modal.toast({message: `该条码${data}不存在`});
			},
			surereclaim() {
				const data = {
					"HsLog": {
						
						"tmid": this.bid,
						"is_confirm": '1'
					},
					"LoginForm": this.loginForm
				}
				if(this.ifspecial()){
					Object.assign(data.HsLog,{},{	"ksid": this.deptId,"remark": this.remark})
				}
			
				doreclaim(data).then(res => {
					console.log(res, 'surereclaim');
					if (res.errorCode == "0") {
						modal.toast({message: '回收成功'});
					
						this.bid = "";
						this.toReclaimList=[];
						this.getToreclaim();
					}
				})
			},
			cancleRecliam() {
				const data = {
					"HsLog": {
						"tmid": this.bid
					},
					"LoginForm": this.loginForm
				};
				cancleRecliam(data).then(res => {
					if (res.errorCode == "0") {
						modal.toast({message: '撤销成功'});
						this.bid = "";
						this.toReclaimList=[];
						this.getToreclaim();
					}
				})
			},
			dialogConfirmBtnClick(){
				this.showsurereclaim=false;
				this.dialogstate=="surereclaim"?this.surereclaim():this.cancleRecliam();
			},
			doreclaim() {
				if(this.bid==''){
					modal.toast({message: '包条码不能为空'});
					return;
				}
				const data = {
					"HsLog": {
						"tmid": this.bid
					},
					"LoginForm": this.loginForm
				}
				console.log(data);
				doreclaim(data).then(res => {
					console.log('包回收');
					console.log(JSON.stringify(res));
					// this.errormessage = res.message;
					if (res.errorCode == "0") {
						modal.toast({message: '回收成功'});
						this.bid = "";
						this.toReclaimList=[];
						this.getToreclaim();
					}
					if (res.status == "error") { //报错提示
					    modal.toast({message: res.message});	
					}
					if (res.status == 'warnadd') {
						this.showsurereclaim = true;
						this.messagecontent=res.message;
						this.dialogstate="surereclaim";
					}
					if (res.status == "warnrev") {//撤销
						this.showsurereclaim = true;
						this.messagecontent="已回收,是否撤销?";
						this.dialogstate="cancleRecliam";
						
					}
			
			
				})
			},
			onEnter() {
				this.reclaimType=this.ifspecial();
				if (this.reclaimType == "normal") {
					this.doreclaim();
				} else {
					this.doreclaimSpecial();
				}
			
			},
			ifspecial(){
				let specialreg = new RegExp('^(BB|bb)');
				return specialreg.test(this.bid)?'special':'normal';
			},
			doreclaimSpecial() {
				const data = {
					"HsLog": {
						"tmid": this.bid,
						"ksid": this.deptId,
						"remark": this.remark
					},
					"LoginForm": this.loginForm
				}
				console.log('doreclaimSpecial');
				console.log(data)
				doreclaimSpecial(data).then(res => {
					console.log('特殊包回收');
					console.log(res);
					if (res.errorCode == "0") {
						this.toast('回收成功');
						this.bid = "";
						this.getToreclaim();
					}
					if (res.status == "error") { //报错提示
						// this.errorDialog = true;
			             modal.toast({message: res.message});	
					}
					if (res.status == 'warnadd') {
						this.messagecontent=res.message;
						this.showsurereclaim = true;
						this.dialogstate="surereclaim";
					}
			
				})
			},
			cleanremark(){
				this.show=false;
				this.remark='';
			},
			wxcButtonClicked(){
				this.show=true;
			},
			onChooseState(item) {
				this.stateSelect = false;
				if (this.state == item) {
					return;
				}
				this.state=item;
				// this.stateMethod = item.stateMethod;
				this.toReclaimList = [];
				this.getToreclaim();
			},
			onChoosedept(item) {
				this.deptSelect = false;
				if (this.deptId == item.de_deptid) {
					return;
				}
				this.toReclaimList = [];
				this.dept=item.de_deptname;
				this.deptId= item.de_deptid;
				
				this.getToreclaim();
			},
			getdeptbyfloor() {
			
				const data = {
					"Kslcgx": {
						"dlbh": this.build?this.build.dlbh:'',
						"lcbh": this.floorlcbh
					},
					"LoginForm": this.loginForm
				}
				console.log(data);
				getdeptbyfloor(data).then(res => {
					console.log(JSON.stringify(res));
					this.deptlist = res.returnValue.ksxxList.map(item => {
						return {
							de_deptname: item.deptname,
							de_deptid: item.deptid,
							alph: item.alph
						};
					});
					this.searchList(''); //默认取前15个
				})
			},
			onsearchdept(e){
				this.deptSelect=true;
				this.searchList(e.value);
			},
			searchList(e) {
				console.log(e);

				this.searchDeptsthrottle(e, this.deptlist).then(res => {
					console.log(JSON.stringify(res));
					this.kslist = res;
				}).catch((e)=>{
					console.log(e);
				})
			},
			getfloors() {
				this.floors = [];
				const data = {
					"Lcxx": {
						"dlbh": this.build.dlbh
					},
					"LoginForm": this.loginForm
				};
				getfloors(data).then(res => {
			
					this.floors = res.returnValue.lcxxList.map(item => {
						return {
							lcname: item.lcname,
							lcbh: item.lcbh
						}
					});
					console.log(res, 'floors');
				})
			},
			getbuilds() {
				const data = {
					"Dlxx": {},
					"LoginForm": this.loginForm
				};
				getbuilds(data).then(res => {
					if(res.status=="OK"&&res.returnValue){
							this.builds = res.returnValue.dlxxList.map(item => {
							return {
								dlname: item.dlname,
								dlbh: item.dlbh
							};
						});
					}else{
						modal.toast({message: '楼层获取失败'});
					}
				})
			},
			onChoosefloor(item) {
				this.floorSelect = false;
				if (this.floorlcbh == item.lcbh) {
					return;
				}
				this.dept='';
				this.floorName=item.lcname;
				this.floorlcbh = item.lcbh ;
				this.getdeptbyfloor();
				console.log(item);
			},
			onChoosebuild(item) {
				this.buildSelect = false;
				if (this.build == item) {
					return;
				}
			
				this.build = item;
				this.floorName='请选择';
				this.floorlcbh='';

				
			
				this.dept='';
				if (item.dlbh) {
					this.getdeptbyfloor();
					this.getfloors();
				} else {
					storage.getItem('deptlist', event => {
					 //设置默认科室列表为登录页科室列表
					  this.deptlist=JSON.parse(event.data);
					  this.searchList('');
					})
					this.floors=[];
					
				}
			},
			closeSelect(){
				this.deptSelect=false;
				this.stateSelect=false;
				this.floorSelect = false;
				this.buildSelect = false;
			},
			showSelect(name) {
				if (name != "floorSelect") {
					this.floorSelect = false;
				}
				if (name != "deptSelect") {
					this.deptSelect = false;
				}
				if (name != "buildSelect") {
					this.buildSelect = false;
				}
				if (name != "stateSelect") {
					this.stateSelect = false;
				}
				setTimeout(() => {
					this[name] = !this[name];
				}, 20)
			
			},
			resetparmas(){
				this.page=1;
				this.accontNum = 0;
				this.toReclaimList = [];
			},
			scrolltoBottom() {
				console.log('daodibei');
				this.page++;
				this.loadingType = 1;
				this.getToreclaim();
			},
			onChoseItem(item) { //单个包被选中
			console.log('选中');
			console.log(item);
			    item.checked=!item.checked;
				item.checked ? this.accontNum++ : this.accontNum--;
			},
			reclaimByList() { //批量回收
			    //阻止重复点击
				if(this.disabled){
					return;
				}
				this.disabled=true;
				 //阻止重复点击
				
				let HsLogList = this.toReclaimList.filter(item => {
					return item.checked;
				});
				HsLogList =HsLogList.map(item=>{
					return {
						'tmid': item.tmid
					};
				})
				this.loading=true;
				HsLogList=_.uniqBy(HsLogList, 'tmid');
				
				const data = {
					"HsLog": {},
					"HsLogList": HsLogList,
					"LoginForm": this.loginForm
				}
				console.log(HsLogList.length)
				reclaimByList(data).then(res => {
					this.disabled=false;
					console.log(res);
					if (res.errorCode == "0") {
						modal.toast({message: '回收成功'});
						this.resetparmas();
						this.getToreclaim();
					}
			
				}).catch((error)=>{this.loading=false;})
			},
			sureReclaimbylist() {
				if (this.accontNum == 0) {
					modal.toast({message: '请选择包'});
					return;
				}
				this.reclaimByList();
			
			},
			choseAll(){
				this.choseall=!this.choseall;
					if (!this.toReclaimList.length) {
						return;
					}
				this.toReclaimList.forEach(item => {
					item.checked = this.choseall ? true : false;
				})
				this.accontNum = this.choseall ? this.toReclaimList.length : 0;
			},
			getToreclaim(){
				clearInterval(this.timer);
				this.timer=setTimeout(()=>{
				  this.gettoreclaimtimeout();
				},500)
			},
			
				
			
			gettoreclaimtimeout(){ //获取待回收列表
				const data = {
					method: this.state.stateMethod,
					"Tmxx": {
						"bnrList": [],
						"isChecked": false,
						"jsList": [],
						"zjFfList": [],
						"ff_did": this.deptId
					}, //第一次登录不传 
					"PageReq": {
						"page": this.page,
						"rows": this.pageSize
					},
					"LoginForm": this.loginForm
				};
				this.loading=true;
				getToreclaim(data).then(res => {
					this.loading=false;
					console.log(JSON.stringify(res), '回收列表');
					if (res.errorCode == "0") {
						this.loadingType = res.returnValue.rows.length < this.pageSize ? 2 : 0;
						this.todayReclaimNum = res.returnValue.zsl?res.returnValue.zsl:0;
						storage.setItem('todayReclaimNum', this.todayReclaimNum, event => {})
						// uni.setStorageSync('todayReclaimNum', this.todayReclaimNum);
						let restoReclaimList = res.returnValue.rows.map(item => { 
							return {
								bmc: item.bmc,
								tmid: item.tmid,
								checked: item.checked,
								hstype_name: item.hstype_name,
								qx_num: item.qx_num
							}
						})
						this.toReclaimList = this.toReclaimList.concat(restoReclaimList);
						
					}
				}).catch((error)=>{this.loading=false;})
			},
			
			
			
			
			closeMask(){
				 this.show = false;
			},
			stop(e){
// 				  e.preventDefault();
//       e.stopPropagation();
			},
			    wxcMaskSetHidden () {
			  this.show = false;
			},
			openNoAnimationMask () {
				console.log('fsdafadsf');
			  this.show = true;
			},

			choseItem(item,index){
				item.checked=!item.checked;
			},
			stepClick(index){
				this.activeIndex=-1;
				setTimeout(()=>{this.activeIndex=index;},1)
			},
		}
	}
</script>
<style scoped>
	  .bottom-button{
		   width:750px;
		   height:90px;
		   flex-direction: row;
	}
	  .check-image{
		   flex:1;
	}
	  .activeborder{
		   border-width:2px;
		   border-color:#C7C7CC;
	}
	  .checkimage-view{
		   width:60px;
		   height:60px;
		   border-radius: 50%;
	} 

	.personfont{
		font-size: 29px;
		color: #A5A5A5;
	}
	.content {
	  padding: 30px;
	}
	/* 通用css */
	.paddingimage{
		position:relative;
		padding-right:35px;
	}
	.image-down {
		
		position:absolute;
		top:32%;
		right:5px;
		width: 30px;
		height: 15px;
	}
	.flexnone{
		flex:none;
	}
	.wrap{
		flex-wrap: wrap;
	}
	.flexaround{
		flex-direction: row;
		justify-content: space-around;
	}
	.flexcenter{
		flex-direction: row;
		justify-content: center;
	}
	.flexbetween{
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.maincontent {
		display: flex;
		flex: 1;
		width: 750px;
		flex-direction: column;
	}
	.home-content{
		/* background-color: red; */
		flex:1;
		width:750px;
		position:relative;
	}
	.border-bottom{
		border-bottom-width: 2px;
		border-bottom-color: #E5E5E5;
	}
	.input-row{
		height:90px;
		width:750px;
		padding:0 25px;
	}
  /* 通用css */
   .same-button{
  	   font-size:45px;
  	   text-align: center;
  	   color:white;
  	   height:90px;
  	   line-height:90px;
  	   background-color: #0080FF;
  }
  .input{
	  width:350px;
	  height: 150px;
  }
  .main-list{
	 
	 flex:1;
   }
 
  
</style>


