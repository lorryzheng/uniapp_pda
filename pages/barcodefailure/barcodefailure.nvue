<template>
	<view class="maincontent">
		<view class="statusBar" style="flex:none;background-color: black;" :style="{height:statusBarHeight+'wx'}"></view>
		<view class="home-content" style="position:relative;">
			<!-- 单独header组件 --> 
		    <navhearder @stepClick="stepClick" :buttonList="buttonList"  :loginForm="loginForm"></navhearder>
			
			<view class="flexaround input-row border-bottom" style="align-items: center;">
				<view class="flexaround paddingimage" @click="showSelect('resonSelect')" style="flex:1;align-items: center;">
					<text style="flex:1;height:60px;line-height:60px;font-size:35px;">{{reson.name}}</text>
					<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
				</view>
			    <input style="height:60px;flex:1;margin-left:30px;" type="text" v-model="tmid" placeholder="请录入包条码" @return="startfailure()"></input>
			</view>
			
			<view class="main-list" style="flex:1;width:750px;">
				<scroller class="scroller" @loadmore="scrolltoBottom" :loadmoreoffset="20">
					<listItem v-for="(item,index) in faliureList" :item="item" ></listItem>	
					<!-- <loadingmore v-if="todayReclaimList.length" :loadingType="loadingType"></loadingmore> -->
				</scroller>
			</view>
			<scrollerComponent :listshow="resonSelect" @chose="onChooseReson"  :width="'420'" :height="'300'" :left="'20'" :top="'230'" :dataList="resonList" :lable="'name'"></scrollerComponent>
		</view>
			<wxc-dialog :title="'包条码：'+tmid"
		            :content="messagecontent"
		            :show="showdialog"
		            @wxcDialogCancelBtnClicked="showdialog=false"
		            @wxcDialogConfirmBtnClicked="dialogConfirmBtnClick"
		          ></wxc-dialog>
		<wxc-loading :show="loading"></wxc-loading>		
		
	</view>
</template>


<script>
	
	
	var modal = weex.requireModule('modal');
	const storage = weex.requireModule('storage')
	import {WxcLoading,WxcDialog} from 'weex-ui';
	import Navhearder from '../_mods/navhearder.nvue';
	import loadingmore from '../_mods/loading-more.nvue';
	import listItem from "./components/list-item.nvue";
		import scrollerComponent from '../_mods/scroller.nvue';
	// import reclaimDetail from "../reclaim/components/reclaim-detail.nvue";
	
	
	import {
		myMixin
	} from "../../common/mixins.js";
	import * as _ from '../../common/lodash.min.js';
	import {
    	getfailureresons,startfailure,canclefailure
	} from "../../common/api.js";
	  

		
	export default {
		mixins: [myMixin],
		components: { Navhearder,WxcLoading,loadingmore,listItem,scrollerComponent,WxcDialog},
		data() {
			return {
				buttonList:['条码失效'],
				tmid:'',
				resonSelect:false,
				resonList:[],
				reson:{name:'请选择失效原因'},
				faliureList:[],
				showdialog:false,
				messagecontent:'',
				
				
				loadingType:2,
				loading:false,
				
				loginForm:{},
				page:1,
				pageSize:20
			}
		},
	
		created() {
			this.setbarheight();
			this.judgeScanType.bind(this)
			this.linsentBarCode(this.judgeScanType)
			storage.getItem('loginForm', event => {
			    this.loginForm = JSON.parse(event.data);
				this.getfailureresons();
			})
		},
			
		methods: {
			judgeScanType(value) {
				let tmReg = new RegExp('^(TM|tm)');
				if (tmReg.test(value)) { 
				    this.tmid = value.slice(2, value.length).trim();
			        this.startfailure();
					return;
				}
				modal.toast({message: `该条码${value}不存在`});
			},
			dialogConfirmBtnClick(){
				this.showdialog=false;
				const data={"Tmsxlog":{"tmid":this.tmid},"LoginForm":this.loginForm};
				canclefailure(data).then(res=>{
					if(res.status=="OK"){
						modal.toast({message: '撤销成功'});
						this.faliureList=this.faliureList.filter(item=>{
							return item.tmid!=this.tmid;
						})
						this.tmid='';
					}
					if(res.status=="error"){
						modal.toast({message: res.message});
					}
				})
			},
			startfailure(){
				if(this.tmid==''){
					modal.toast({message: '请录入包条码'});
					return;
				}
				if(!this.reson.id){
					modal.toast({message: '请选择失效原因'});
					return;
				}
				const data={"Tmsxlog":{"sx_uid":this.loginForm.userId,"sx_uname":this.loginForm.userName,"sxyy_code":this.reson.id,"tmid":this.tmid},"LoginForm":this.loginForm};
				startfailure(data).then(res=>{
					console.log('失效原因');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 let item=res.returnValue.Tmxx;
						 console.log(JSON.stringify(item));
						 let tempitem={"bmc":item.bmc,tmid:item.tmid,xq_end:item.xq_end.substring(0,11),xq_desp:item.xq_desp}
						 this.faliureList.push(tempitem);
						 this.tmid='';
					 }
					if(res.status=="warn"){
						this.showdialog=true;
						this.messagecontent="已经失效,是否撤销?";
					 }
					 
					 if(res.status=="error"){
					 	modal.toast({message: res.message});
					 }
				})
			},
			onChooseReson(item){
				this.reson=item;
				this.resonSelect = false;
				//失效原因必选
			},
			showSelect(name) {
				if (name != "resonSelect") {
					this.resonSelect = false;
				}
				setTimeout(() => {
					this[name] = !this[name];
				}, 20)
			
			},
			getfailureresons(){
				const data={"Tmsxyy":{"is_inv":"1"},"LoginForm":this.loginForm};
				getfailureresons(data).then(res=>{
					console.log('失效原因');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 this.resonList=res.returnValue.sxyyList
					 }
				})
			},
			
			
			
			
			
			
			
			
			
			
			
			scrolltoBottom(){
				this.page++;
			    this.loadingType=1;
				this.getTodayReclaim();
			},
			getTodayReclaim:_.throttle(function(state){//获取待回收列表
				const data={
				"Tmxx":{},"PageReq":{"page":this.page,"rows":this.pageSize},"LoginForm":this.loginForm};
				this.loading=true;
				getTodayReclaim(data).then(res=>{
					this.loading=false;
					console.log(res,'今日回收列表');
				    if(res.errorCode=="0"){
						this.loadingType=res.returnValue.rows<this.pageSize?2:0;
						let resReclaimList=res.returnValue.rows.map(item=>{
							return {bmc:item.bmc,tmid:item.tmid,hstype_name:item.hstype_name,qx_num:item.qx_num}
						})
						this.todayReclaimList=this.todayReclaimList.concat(resReclaimList);
			
					}
				})
			},500,{ 'trailing': false })


		}
	}
</script>
<style src="../../common/base.css"></style>
<style scoped>

	.maincontent {
		display: flex;
		flex: 1;
		width: 750px;
		flex-direction: column;
	}
	.home-content{
		/* background-color: red; */
		flex:1;
		width:750px;
		position:relative;
	}
	.border-bottom{
		border-bottom-width: 2px;
		border-bottom-color: #E5E5E5;
	}
	.input-row{
		height:90px;
		width:750px;
		padding:0 25px;
	}

  .main-list{
	 
	 flex:1;
   }
 
  
</style>


