<template>
	<view style="width:750px;position:absolute;top:0;left:0;background-color: rgba(0, 0, 0, 0.5);" :style="{height:mainContentHeight+'wx'}" @click="closeall">
		<view style="width:750px;height:1200px;position:absolute;bottom:0;left:0;background-color: white;">
			<view class="head">
	<!-- 			<text style="font-size:35px;" @click="closeAdd(false)">取消</text>
				<text style="font-size:35px;">{{activeMachine.dev_name}}</text>
			
				<wxc-button text="确定" :disabled="disabledsure" type="blue" :btn-style="{width:'120px',height:'60px'}" :text-style="{fontSize:'30px',color:'white'}" @wxcButtonClicked="closeAdd(true)"></wxc-button> -->
				
					
					<text style="font-size:35px;">不合格原因</text>
          	<image src="../../static/img/i-close2.png" style="width:36px;height:36px;" alt="" @click.stop="closeUnqualityReson"></image>
			
			</view>
			<view class="reson-tip"><text style="font-size: 29px;color: #666666;">请选择不合格原因</text></view>
			<scroller class="scroller" style="height:300px;width:750px;">
				<view class="reson-list-item flexbetween border-bottom" v-for="(item,index) of unqualityResons" @click.stop="choseReson(item,index)" :key="index">
					<text style="font-size:40px;">{{item.aaa103}}</text>	
          	<image v-if="index==acresonindex" style="width:50px;height:33px;" src="../../static/img/i-Check.png" alt=""></image>

				</view>
			</scroller>
			 <view class="reson-tip"><text style="font-size: 29px;color: #666666;">请选择换锅后清洗机</text></view>
			<scroller class="scroller" style="flex:1;width:750px;">
				<view class="reson-list-item flexbetween border-bottom"  v-for="(item,index) of machines" :key="index" @click.stop="choseMachine(item,index)">
					<text style="font-size:40px;">{{item.name}}</text>
          <image v-if="index==acmachineindex" style="width:50px;height:33px;" src="../../static/img/i-Check.png" alt=""></image>	
				</view>
			</scroller>
			<view class="one-button flexcenter" @click.stop="unquality">
			   
				<text class="same-button" style="flex:1;width:750px;text-align: center;">确定</text>
			</view>
			
			
		</view>
			
		<wxc-dialog :title="''"
		    :content="'是否换锅？'"
		    :show="showDialog"
			 @wxcDialogCancelBtnClicked="cancalepotchange" 
		    @wxcDialogConfirmBtnClicked="potchange"
		  ></wxc-dialog>
          <wxc-loading :show="loading"></wxc-loading>
			
	</view>
</template>

<script>
	import {WxcButton,WxcLoading,WxcDialog} from 'weex-ui';
	var modal = weex.requireModule('modal');
	import {
		unquality,updatesignMachine,potChange
	} from "../../../common/api.js";
	
	
		import {
		myMixin
	} from "../../../common/mixins.js";
	import scrollerComponent from '../../_mods/scroller.nvue';
	const storage = weex.requireModule('storage');

	export default {
		mixins: [myMixin],
		components: {WxcButton,WxcLoading,WxcDialog},
		props: ['unqualityResons','machines','refreshpage'],
	
	
		data() {
			return {
		        loginForm:{},
				mainContentHeight:'2000',
				activeMachine:{},
				acresonindex:-1,
				acmachineindex:-1,
				reson:'',
				machine:'',
				aftermachine:'',
				loading:false,
				showDialog:false

			}
		},
		created(){

			this.getmaincontentheight();
            storage.getItem('activeWashmachine', event => {
             	this.activeMachine = JSON.parse(event.data);
             })

			
             
             storage.getItem('loginForm', event => {
             	this.loginForm = JSON.parse(event.data);
				// this.getpotchangeResons();
             })
		},
		methods: {
			cancalepotchange(){
				this.showDialog=false;
				this.refreshpage(this.activeMachine);
			},  
			getaftermachine(index){
					console.log(this.machine.id);
					const data={"Qx":{"dev_id":this.machine.id},"LoginForm":this.loginForm};
					this.loading=true;
					updatesignMachine(data).then(res=>{
						this.loading=false;
						if(res.errorCode == "0"){
							this.aftermachine=res.returnValue.qxjStateList[0];
							
							if(this.aftermachine.state_name=='待检定'||this.aftermachine.state_name=='清洗中'){
								modal.toast({message: "该清洗机处于"+this.aftermachine.state_name+"不可换锅"});
								this.acmachineindex=-1;
								this.acresonindex=-1;
								this.aftermachine='';
								return;
							}else{
							    this.acmachineindex=index;	
								
							}
							
							this.disabledsure=false;
						}
					}).catch((error)=>{this.loading=false;})
			},
			potchange(){
				    this.showDialog=false;
					const potchangeData={"Qx":{
					"aft_d_gc":this.aftermachine.d_gc,
					"aft_dev_id":this.aftermachine.dev_id,
					"aft_dev_name":this.aftermachine.dev_name,
					"aft_t_gc":this.aftermachine.t_gc,
					"did":this.loginForm.deptId,
					"jgms":this.activeMachine.jgms,
					"bhgyy_name":this.reson?this.reson.name:'',
					"sb_type":this.activeMachine.sb_type,
					"state":this.activeMachine.state,
					"state_name":this.activeMachine.state_name,
					"d_gc":this.activeMachine.d_gc,
					"dev_id":this.activeMachine.dev_id,
					"dev_name":this.activeMachine.dev_name,
					"end_dt":this.activeMachine.end_dt,
					"id":this.activeMachine.id,
					"plan_time":this.activeMachine.plan_time,
					"cre_uid":this.loginForm.userId,
					"cre_uname":this.loginForm.userName,
					"start_dt":this.activeMachine.start_dt,
					"t_gc":this.activeMachine.t_gc},"LoginForm":this.loginForm};
					console.log('potchangeData')
					console.log(JSON.stringify(potchangeData))
					potChange(potchangeData).then(res=>{
						
						if(res.status == "OK"){
							 this.refreshpage(this.aftermachine);
						}else{
							modal.toast({message: res.message});
						}
					})
					
			},
			unquality(){
				const data={"Qx":{
					"did":this.loginForm.deptId,
					"bhgyy_name":this.reson?this.reson.name:'',
					"jgms":0,
					"result":"0",
					"sb_type":this.activeMachine.sb_type,
					"state":this.activeMachine.state,
					"state_name":this.activeMachine.state_name,
					"d_gc":this.activeMachine.d_gc,
					"dev_id":this.activeMachine.dev_id,
					"dev_name":this.activeMachine.dev_name,
					"end_dt":this.activeMachine.end_dt,
					"id":this.activeMachine.id,
					"plan_time":this.activeMachine.plan_time,
			        "cre_uid":this.loginForm.userId,
			      	"cre_uname":this.loginForm.userName,
					"start_dt":this.activeMachine.start_dt,
					"t_gc":this.activeMachine.t_gc
			       },"LoginForm":this.loginForm};
				   this.loading=true;
				   unquality(data).then(res=>{
				 this.loading=false;
					   if (res.status == "OK") {
						   if(this.machine){
							   console.log('showdialog')
							   this.showDialog=true;
						 
						   }else{
							   modal.toast({message: "检定成功"});
							  this.refreshpage();
						   }
						  
					   }else{
						   modal.toast({message: res.message});
						  
					   }
				   }).catch((error)=>{this.loading=false;})
			},
			choseReson(item,index){
				if(this.acresonindex==index){
					this.acresonindex=-1;
					this.reson='';
					return;
				}
				this.acresonindex=index;
				this.reson=item;
			},
			choseMachine(item,index){
				if(this.acmachineindex==index){
					this.acmachineindex=-1;
					this.machine='';
					this.aftermachine="";
					return;
				}
				// this.acmachineindex=index;
				this.machine=item;
				this.getaftermachine(index);
			},	
			closeUnqualityReson(){
				this.$emit('closeUnqualityReson',null)
			},
				
				
			async getmaincontentheight(){
				this.mainContentHeight=await this.getmainContentHeight();
			},
		

		},
		mounted(){
					
		},
		destroyed(){
// 			materiallist=[];
// 			this.packId='';
// 			this.tmid='';
// 			this.materialNum=1;
// 			this.price='';
// 			this.mark='';
// 			this.materialId="";
// 			this.material='';
// 			this.disabledpack=false;
		}
	}
</script>
<style src="../../../common/base.css"></style>

<style scoped>
	.reson-list-item {
		padding: 20px 30px 20px 30px;

	}
	.aligncenter{
		align-items: center;
	}
	.head {
		height:90px;
		
		padding: 0 30px 0 30px;;
		position: relative;
		flex: none;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.reson-tip {
		height:60px;
		box-sizing: border-box;
		background-color: #F3F3F3;
		padding: 15px;
	}
		.same-button{
		   font-size:45px;
		  /* text-align: center; */
		   color:white;
		/*   height:90px;
		   line-height:90px; */
		  
	}
	.one-button{
		
		   background-color: #0080FF;
		  flex:none;
		   width:750px;
		   height:90px;
		   align-items: center;
		   justify-content: center;
		 /*  flex-direction: row; */
	}
	

</style>
