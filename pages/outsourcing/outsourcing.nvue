<template>
	<view class="maincontent">
		<view class="statusBar" style="flex:none;background-color: black;" :style="{height:statusBarHeight+'wx'}"></view>
		<view class="home-content" style="position:relative;">
			<!-- 单独header组件 --> 
			
		    <navhearder @stepClick="stepClick" :buttonList="buttonList"  :loginForm="loginForm"></navhearder>
			<view style="width:750px;flex:1;" v-if="showmain">
				<view class="flexaround input-row  border-bottom" style="justify-content: center;">
						<view class="flexcenter paddingimage" style="flex:1;align-items: center;">
							<input v-model="startTime"  style="height:60px;flex:1;" class="input" type="date" @change="datechange('start')" placeholder="日期" />
              <image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
						</view>
						<view class="flexcenter paddingimage" style="flex:1;align-items: center;">
							<input v-model="endTime"  style="height:60px;flex:1;" class="input" type="date" @change="datechange('end')" placeholder="日期" />
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
						</view>
				</view>
				<view class="flexaround input-row border-bottom" style="align-items: center;">
					<view class="flexaround paddingimage" @click="showSelect('shipperSelect')" style="flex:1;align-items: center;">
						<text style="flex:1;height:60px;line-height:60px;font-size:35px;">{{shipper.name}}</text>
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
					</view>
				    <input style="height:60px;flex:1;margin-left:30px;" type="text" v-model="delivery" placeholder="请输入送货人"></input>
				</view>
				<view class="flexaround input-row border-bottom" style="align-items: center;">
				
				    <input style="height:60px;flex:1;margin-left:30px;" type="text" v-model="bltmid" placeholder="请录入病历号" @input="personName=''" @return="getoutperson"></input>
					<text style="flex:1;font-size:30px;">{{personName}}</text>
				</view>
				<view class="flexaround input-row border-bottom" style="align-items: center;">
					<view class="flexaround paddingimage" @click="showSelect('stateSelect')" style="flex:1;align-items: center;">
						<text style="flex:1;height:60px;line-height:60px;font-size:35px;">{{state.aaa103}}</text>
						<image src="../../static/img/i-down1.png" class="image-down" alt=""></image>
					</view>
				</view>
				<view class="main-list" style="flex:1;width:750px;">
					<scroller class="scroller">
						<listItem v-for="(item,index) in list" @itemclick="itemclick" :item="item" :key="index"></listItem>	
						<!-- <loadingmore v-if="todayReclaimList.length" :loadingType="loadingType"></loadingmore> -->
					</scroller>
				</view>
				<view class="bottom-button">
				    <text class="same-button" style="flex:1;border-style: solid;border-right-width: 2px;border-color: white;" @click="outsourcingsearch">查询</text> 
					<text class="same-button" style="flex:1;" @click="add">新增</text>
				</view>
				<scrollerComponent :listshow="shipperSelect" @chose="onChooseshipper"  :width="'500'" :height="'500'" :left="'20'" :top="'170'" :dataList="shipperList" :lable="'name'"></scrollerComponent>
				<scrollerComponent :listshow="stateSelect" @chose="onChoosestate"  :width="'420'" :height="'300'" :left="'20'" :top="'350'" :dataList="stateList" :lable="'aaa103'"></scrollerComponent>
			</view>
			<newadd v-if="showadd" :statename="statename" :item="activeItem" @closenewadd="closenewadd"></newadd>
			<wxc-loading :show="loading"></wxc-loading>
		
			
			
		</view>
		<wxc-dialog :title="'包条码：'+tmid"
		            :content="messagecontent"
		            :show="showdialog"
		            @wxcDialogCancelBtnClicked="showdialog=false"
		            @wxcDialogConfirmBtnClicked="dialogConfirmBtnClick"
		          ></wxc-dialog>
				
		
	</view>
</template>


<script>
	
	 const globalEvent = weex.requireModule('globalEvent');
	var modal = weex.requireModule('modal');
	const storage = weex.requireModule('storage')
	import {WxcLoading,WxcDialog} from 'weex-ui';
	import Navhearder from '../_mods/navhearder.nvue';
	import loadingmore from '../_mods/loading-more.nvue';
	import listItem from "./components/outsourcing-list-item.nvue";
		import scrollerComponent from '../_mods/scroller.nvue';
		import newadd from "./components/newadd.nvue";
		
	// import reclaimDetail from "../reclaim/components/reclaim-detail.nvue";
	
	
	import {
		myMixin
	} from "../../common/mixins.js";
	import * as _ from '../../common/lodash.min.js';
	import {
    	getshippers,getoutperson,publicSelectnvue,outsourcingsearch
	} from "../../common/api.js";
		import {
		datewarnmixins
	} from "../../common/datewarnmixins.js";
	import {formatDate} from "../../common/tool.js";
	  

		
	export default {
		mixins: [myMixin,datewarnmixins],
		components: { Navhearder,WxcLoading,loadingmore,scrollerComponent,WxcDialog,listItem,newadd},
		data() {
			return {
				
				buttonList:['外来包'],
				activeIndex:0,
				delivery:'',
				shipper:{name:'请选择发货商'},
				state:{aaa103:'请选择单据状态'},
				stateSelect:false,
				bltmid:'',
				shipperList:[],
				shipperSelect:false,
				stateList:[],
				personName:'',
				startTime:formatDate(new Date(),"yyyy-MM-dd"),
				endTime:formatDate(new Date(),"yyyy-MM-dd"),
				list:[],
				showadd:false,
				statename:'',
				activeItem:'',
				loading:false,
				loginForm:{},
				showmain:true
			
			}
		},
	
		created() {
			this.setbarheight();
			this.linsentBarCode(this.judgeScanType);
		
			storage.getItem('loginForm', event => {
			    this.loginForm = JSON.parse(event.data);
				this.getshippers();
				this.getoutstate();
				this.getsystime().then(res=>{
					this.startTime=res.slice(0,11);
					this.endTime=res.slice(0,11);
					this.outsourcingsearch();
				});
			})
			 globalEvent.addEventListener("plusMessage", e => {
                console.log('plusMessage');
                if (e.data.key=="fresh") { 
                   console.log('fresh');
				   this.outsourcingsearch();
                }
            });
		
		},
			
		methods: {
			closenewadd(data){
				
				this.showadd=false;
				setTimeout(()=>{
					this.showmain=true;
				},1)
				if(data){
					this.outsourcingsearch();
				}
			},
			itemclick(item){
				if(item.status_name=="未审核"){
					this.statename=item.status_name;
					this.showadd=true;
					this.activeItem=item;
				}
				if(item.status_name=="已审核"||item.status_name=="部分归还"){
					storage.setItem('revertItem', item, event => {
						uni.navigateTo({
							url: `/pages/revert/revert`
						});
					})
					
				}
			},
			add(){
				this.showmain=false;
				setTimeout(()=>{this.showadd=true;},1)
				this.activeItem='';
				this.statename="新增";
			},
			outsourcingsearch(){
				const data={"Wlb":{"end_dt":this.endTime.trim()+' 23:59:59',"start_dt":this.startTime.trim()+' 00:00:00',"fhs_id":this.shipper.id,"p_mrn":this.bltmid,"sh_uname":this.delivery,"status":this.state.aaa102},"LoginForm":this.loginForm};
				console.log('data');
				console.log(JSON.stringify(data));
				this.loading=true;
				outsourcingsearch(data).then(res=>{
					this.loading=false;
					console.log('outsourcingsearch');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 if(res.returnValue.wlbList.length==0){
							 modal.toast({message:"未查询到相关记录!"})
							 this.list=[];
							 return;
						 }
						 this.list=res.returnValue.wlbList
// 						 .map(item=>{
// 							 
// 							 return {sh_uname:item.sh_uname, p_name:item.p_name,  jj_uname:item.jj_uname,    jj_dt:item.jj_dt, status_name:item.status_name, fhs_name:item.fhs_name};
// 						 })
// 						 this.shipperList=res.returnValue.rows.map(item=>{
// 							 return {id:item.id,name:item.name}
// 						 })
						 // this.resonList=res.returnValue.sxyyList
					 }else{
						 modal.toast({message:res.message})
					 }
				})
			},
			onChoosestate(item){
				this.stateSelect=false;
				this.state=item;
			},
			getoutstate(){
					const data={"AA10":{"aaa100":"WLB_STATE"},"LoginForm":this.loginForm};
				publicSelectnvue(data).then(res=>{
					console.log('getoutstate');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
                         this.stateList=res.returnValue.AA10List.map(item=>{
							 return {aaa102:item.aaa102,aaa103:item.aaa103}
						 })
					 }else{
						 modal.toast({message:res.message})
					 }
				})
			},
			getoutperson(){
				if(this.bltmid==''){
					 modal.toast({message:'请输入病历号'})
					 return;
				}
				const data={"Brxx":{"mrn":this.bltmid},"LoginForm":this.loginForm};
				getoutperson(data).then(res=>{
					console.log('getoutperson');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 this.personName=res.returnValue.brList[0].p_name;
					 }else{
						 modal.toast({message:res.message})
					 }
				})
			},
			getshippers(){
				const data={"Sccj":{},"PageReq":{},"LoginForm":this.loginForm};
				getshippers(data).then(res=>{
					console.log('getshippers');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 this.shipperList=res.returnValue.rows.map(item=>{
							 return {id:item.id,name:item.name}
						 })
						 // this.resonList=res.returnValue.sxyyList
					 }
				})
			},
			datechange(timestate){
				if(this.warningdate({'start':this.startTime.trim(),'end':this.endTime.trim()})){
					timestate=='end'?modal.toast({message:'结束时间不得小于开始时间！'}):modal.toast({message:'开始时间不得大于结束时间！'});
					return;
				}
				// this.initdata()
				// this.getquerylist();
			},
				showSelect(name) {
				if (name != "shipperSelect") {
					this.shipperSelect = false;
				}
				if (name != "stateSelect") {
					this.stateSelect = false;
				}
				 
				setTimeout(() => {
					this[name] = !this[name];
				}, 20)
			
			},
			onChooseshipper(item){
				this.shipperSelect=false;
				this.shipper=item;
			},
			
			judgeScanType(value) {
				let tmReg = new RegExp('^(TM|tm)');
				if (tmReg.test(value)) { 
				    this.tmid = value.slice(2, value.length).trim();
			        this.startfailure();
					return;
				}
				modal.toast({message: `该条码${value}不存在`});
			},
			dialogConfirmBtnClick(){
				this.showdialog=false;
				const data={"Tmsxlog":{"tmid":this.tmid},"LoginForm":this.loginForm};
				canclefailure(data).then(res=>{
					if(res.status=="OK"){
						modal.toast({message: '撤销成功'});
						this.faliureList=this.faliureList.filter(item=>{
							return item.tmid!=this.tmid;
						})
						this.tmid='';
					}
					if(res.status=="error"){
						modal.toast({message: res.message});
					}
				})
			},
			startfailure(){
				if(this.tmid==''){
					modal.toast({message: '请录入包条码'});
					return;
				}
				if(!this.reson.id){
					modal.toast({message: '请选择失效原因'});
					return;
				}
				const data={"Tmsxlog":{"sx_uid":this.loginForm.userId,"sx_uname":this.loginForm.userName,"sxyy_code":this.reson.id,"tmid":this.tmid},"LoginForm":this.loginForm};
				startfailure(data).then(res=>{
					console.log('失效原因');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 let item=res.returnValue.Tmxx;
						 console.log(JSON.stringify(item));
						 let tempitem={"bmc":item.bmc,tmid:item.tmid,xq_end:item.xq_end.substring(0,11),xq_desp:item.xq_desp}
						 this.faliureList.push(tempitem);
						 this.tmid='';
					 }
					if(res.status=="warn"){
						this.showdialog=true;
						this.messagecontent="已经失效,是否撤销?";
					 }
					 
					 if(res.status=="error"){
					 	modal.toast({message: res.message});
					 }
				})
			},
			onChooseReson(item){
				this.reson=item;
				this.resonSelect = false;
				//失效原因必选
			},
		
			getfailureresons(){
				const data={"Tmsxyy":{"is_inv":"1"},"LoginForm":this.loginForm};
				getfailureresons(data).then(res=>{
					console.log('失效原因');
					console.log(JSON.stringify(res));
					 if(res.status=="OK"){
						 this.resonList=res.returnValue.sxyyList
					 }
				})
			},
			
			
			
			
			
			
			
			
			
			
			
			scrolltoBottom(){
				this.page++;
			    this.loadingType=1;
				this.getTodayReclaim();
			},
			getTodayReclaim:_.throttle(function(state){//获取待回收列表
				const data={
				"Tmxx":{},"PageReq":{"page":this.page,"rows":this.pageSize},"LoginForm":this.loginForm};
				this.loading=true;
				getTodayReclaim(data).then(res=>{
					this.loading=false;
					console.log(res,'今日回收列表');
				    if(res.errorCode=="0"){
						this.loadingType=res.returnValue.rows<this.pageSize?2:0;
						let resReclaimList=res.returnValue.rows.map(item=>{
							return {bmc:item.bmc,tmid:item.tmid,hstype_name:item.hstype_name,qx_num:item.qx_num}
						})
						this.todayReclaimList=this.todayReclaimList.concat(resReclaimList);
			
					}
				})
			},500,{ 'trailing': false })


		}
	}
</script>
<style src="../../common/base.css"></style>
<style scoped>
	.same-button{
		   font-size:45px;
		   text-align: center;
		   color:white;
		   height:90px;
		   line-height:90px;
		   background-color: #0080FF;
	}
	  .bottom-button{
		   width:750px;
		   height:90px;
		   flex-direction: row;
	}

	.maincontent {
		display: flex;
		flex: 1;
		width: 750px;
		flex-direction: column;
	}
	.home-content{
		/* background-color: red; */
		flex:1;
		width:750px;
		position:relative;
	}
	.border-bottom{
		border-bottom-width: 2px;
		border-bottom-color: #E5E5E5;
	}
	.input-row{
		height:90px;
		width:750px;
		padding:0 25px;
	}

  .main-list{
	 
	 flex:1;
   }
 
  
</style>


